---
title: "NLP Model Evaluation"
format: html
---

## Introduction:

**What is NLP Evaluation?**

NLP evaluation measures how well language models actually work. It answers basic questions: Is this model good enough? Can we trust it with real users?

But here's the challenge‚Äîtesting language models isn't like testing regular software. When code breaks, it's obvious. When a language model fails, it might write something that sounds perfect but is completely wrong. A model might be 92% accurate overall but fail every time it sees sarcasm. This is what makes NLP evaluation so tricky: we're measuring how well computers understand the messy, complex world of human language.

**Why It Matters Now More Than Ever**

In 2023 alone, we saw an AI chatbot fail to recognize suicide warning signs (leading to a death), lawyers submit fake AI-generated cases to courts, and Air Canada forced to honor a refund policy its bot invented. As Chip Huyen warns: "The more AI is used, the more opportunity there is for catastrophic failure."

**The paradox** ‚Äî The smarter our models get, the harder they become to evaluate. It's easy to check a kid's math homework, but verifying if an AI's medical advice is accurate requires medical expertise. We need good evaluation to build better models, but we need expertise to do good evaluation.

**Two Types of Tasks, Two Different Challenges**

- **Closed-ended tasks** have clear right answers (Is this email spam? What's the sentiment?). We can use traditional metrics like accuracy and precision, but even these "simple" tasks suffer from shortcuts, dataset problems, and human labeling errors.

- **Open-ended tasks** have no single right answer (Write a summary, translate this text, answer this question). Traditional metrics completely fail here. Word-matching might say "Heck no!" is similar to "Heck yes!" because they share words.

**What's Ahead**

This overview covers how to evaluate both closed and open-ended tasks, why current methods fail and what's replacing them, major problems like contamination and bias, and practical solutions for real-world applications.

---

## Closed-Ended Tasks

Closed-ended tasks are characterized by a limited set of correct answers‚Äîoften just one. This constraint enables automatic, objective evaluation and makes these tasks ideal for benchmarking.

While closed-ended tasks offer clear and objective evaluation metrics, they still present meaningful challenges in dataset construction, evaluation design, and metric selection. Their well-defined output space enables direct comparison across models, but can also obscure subtle model weaknesses‚Äîsuch as shortcut learning or reliance on spurious correlations.


| **Task Type**             | **Description**                                           | **Example**                                                                                                                                     | **Popular Benchmarks**     | **Common Pitfalls**                                        |
|---------------------------|-----------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|-------------------------------------------------------------|
| **Sentiment Analysis**    | Classify emotional tone (positive/negative/neutral)       | "Read the book, forget the movie!" ‚Üí **Negative**                                                                                               | SST, IMDB, Yelp             | Fails on sarcasm, irony, cultural context                  |
| **Textual Entailment**    | Does sentence B logically follow from sentence A?         | *Premise:* "A soccer game with multiple males playing"<br>*Hypothesis:* "Some men are playing sport" ‚Üí **Entailment**                            | SNLI, MultiNLI, RTE         | Shortcut learning (e.g., keyword overlap); see SNLI issues |
| **Named Entity Recognition (NER)** | Identify and classify proper nouns                     | "Apple released the iPhone." ‚Üí **[Apple‚ÄìORG]**, **[iPhone‚ÄìPRODUCT]**                                                                             | CoNLL-2003                  | Ambiguity: Apple (fruit vs company)                        |
| **Part-of-Speech Tagging**| Assign grammatical categories to words                    | "The quick brown fox" ‚Üí **[The‚ÄìDET]**, **[quick‚ÄìADJ]**, **[brown‚ÄìADJ]**, **[fox‚ÄìNOUN]**                                                           | Penn Treebank (PTB)         | Often used as foundation for parsing & other tasks         |
| **Coreference Resolution**| Determine pronoun references                              | "Mark told Pete lies about himself. He should have been more truthful." ‚Üí **"He" = Mark**                                                        | WSC, OntoNotes              | Requires deep context or world knowledge                   |
| **Question Answering**    | Extract answers from passage                              | *Context:* "The ESA was passed in 1973."<br>*Q:* "When was it passed?" ‚Üí **1973**                                                                | SQuAD, SQuAD 2.0            | Models memorize patterns or position, not true reasoning   |

> üí° *These tasks often serve as building blocks for more complex NLP pipelines.*

These individual tasks can also be grouped into multi-task benchmarks that evaluate general language understanding across a range of closed-ended challenges. **SuperGLUE** is one of the most prominent such benchmarks.

### Multi-Task Benchmark: **SuperGLUE**

SuperGLUE is a comprehensive **closed-ended multi-task benchmark** designed to evaluate general language understanding. It combines multiple tasks that test various aspects of comprehension and reasoning in language models.

**Tasks in SuperGLUE:**

- **BoolQ, MultiRC**: Reading comprehension  
- **CB, RTE**: Natural language inference (entailment)  
- **COPA**: Causal reasoning (cause and effect)  
- **ReCoRD**: Reading comprehension with commonsense reasoning  
- **WiC**: Word meaning in context  
- **WSC**: Coreference resolution

**Leaderboard Highlights (v2.0):**

- **Top models**: Vega v2, ST-MoE-32B, ERNIE, PaLM 540B, T5  
- **Metrics used**: Accuracy, F1 score, Exact Match, Gender Parity, etc.


### Challenges in Closed-Ended Evaluation

1. **Choosing the Right Metric:** Choosing the right evaluation metric is not trivial. Different tasks and datasets require different evaluation metrics. A model may appear strong on one metric but perform poorly on another depending on task setup and class imbalance. For instance, accuracy may seem intuitive but can be misleading on imbalanced datasets. A model might achieve high accuracy simply by predicting the majority class. On the other hand, recall and precision offer complementary perspectives: one focusing on completeness (recall) and the other on correctness (precision). The choice of metric directly impacts how model performance is interpreted, compared, and optimized. In multi-class or skewed-distribution scenarios, using a single metric without understanding its limitations can mask critical weaknesses.

**Common Evaluation Metrics**:

- **Accuracy**: Proportion of correct predictions; suitable for balanced datasets.
- **Precision**: Proportion of true positives out of all predicted positives.
- **Recall**: Proportion of true positives out of all actual positives.
- **F1-Score**: Harmonic mean of precision and recall; ideal for class imbalance.
- **ROC AUC**: Measures ability to distinguish between classes across thresholds.


2. **Aggregating Metrics:** In multi-task or multi-subtask setups (e.g., SuperGLUE), it‚Äôs important to combine metrics effectively. Simply averaging can underrepresent harder tasks or those with imbalanced label distributions.

3. **Label Quality**  

- Are the ground-truth labels reliable and consistent?
- Is there ambiguity in annotations due to vague definitions or task subjectivity?

4. **Spurious Correlations:** Models often latch onto dataset artifacts or heuristics rather than true understanding. 

   - **Example** (SNLI):  
     - Premise: ‚ÄúThe economy could be still better.‚Äù  
     - Hypothesis: ‚ÄúThe economy has *never* been better.‚Äù  
     - Model might infer contradiction simply due to the word *never* rather than actual reasoning

This reveals how even in closed-ended tasks, evaluation must consider model behavior beyond raw accuracy to ensure generalization and robustness.

---


## Open-Ended Text Generation

Open-ended generation models, such as large language models (LLMs), are capable of producing free-form outputs like summaries, translations, stories, or answers to instructions. Unlike traditional models that produce a fixed label or number, these models generate entire sequences of text‚Äîoften with multiple plausible responses for a single input.

This flexibility makes them powerful but also difficult to evaluate. There is rarely a single ‚Äúcorrect‚Äù output, and even seemingly unrelated completions may still be valid. For example, a user prompt like *‚ÄúTell me something interesting about the moon‚Äù* could lead to many diverse, accurate, and coherent answers.

Evaluating such outputs requires more than checking against a reference‚Äîit demands assessing coherence, fluency, relevance, factual accuracy, and semantic alignment.

As a result, evaluation of open-ended generation must go beyond traditional metrics and adopt a more nuanced, multi-faceted approach.


### Types of Evaluation Methods

There are three broad classes of evaluation methods for text generation:

- **Content Overlap Metrics** ‚Äì compare model outputs against human-written references based on lexical or n-gram overlap.
- **Model-Based Metrics** ‚Äì assess semantic similarity using pretrained embedding models (e.g., BERTScore, BLEURT).
- **Human Evaluations** ‚Äì involve direct human judgment of qualities such as fluency, coherence, and factual correctness.


**Content Overlap Metrics:**

These methods compute similarity based on surface-level word overlap between the generated text and a reference.

- Fast and widely used but limited in capturing meaning.
- Common metrics include **BLEU**, **ROUGE**, **METEOR**, **CIDEr**.
- Often reported for tasks like summarization and translation, despite known limitations.

> *n-gram metrics have no concept of meaning‚Äîthey fail when different words express the same idea.*


**Model-Based Metrics**

These metrics leverage learned representations from pre-trained language models to evaluate **semantic similarity**.

- Compute similarity in embedding space between reference and generated outputs.
- More robust to paraphrasing and lexical variation.

Two popular types:

- **BERTScore**  
  - Uses contextual embeddings from BERT and cosine similarity to compare word pairs.  
  - Captures semantic relationships between words.  
  - *(Zhang et al., 2020)*

- **BLEURT**  
  - Fine-tuned regression model based on BERT.  
  - Outputs a score indicating grammar and meaning similarity with reference text.  
  - *(Sellam et al., 2020)*


**Human Evaluations**

Human evaluation remains the gold standard‚Äîespecially for open-ended tasks.

- Captures subjective qualities like **fluency**, **coherence**, **factual accuracy**, and **harmlessness**.
- Can use Likert scales, pairwise comparisons, or ranking approaches.
- Important to run multiple annotators and test inter-annotator agreement.

Evaluation of factuality is particularly difficult. As the lecture notes emphasize, a model can produce highly fluent and confident outputs that are factually wrong. In tasks like summarization, this means comparing to source documents‚Äînot just a reference summary.


**Reference Quality Matters**

Evaluation scores are only as good as the reference they compare against.

- A flawed reference can mislead metrics like ROUGE or BLEU.
- Expert-written references lead to better correlation with human judgments of faithfulness.
- When references are missing, metrics break down‚Äîmaking human evaluation essential.

---

> ‚ÄúWe need to rethink evaluation for open-ended tasks. The answer space is huge, and automated scores don't always capture what humans care about.‚Äù

---

## References & Further Reading



[16] Huyen, C. (2024). *AI Engineering: Building Applications with Foundation Models*. O‚ÄôReilly Media.  

[17] Alammar, J., & Grootendorst, M. (2023). *Hands-On Large Language Models: Language Understanding and Generation*. O‚ÄôReilly Media. 


 